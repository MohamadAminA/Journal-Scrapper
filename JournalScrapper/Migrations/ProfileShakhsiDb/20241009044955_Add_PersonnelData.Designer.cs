// <auto-generated />
using JournalScrapper;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JournalScrapper.Migrations.ProfileShakhsiDb
{
    [DbContext(typeof(ProfileShakhsiDbContext))]
    [Migration("20241009044955_Add_PersonnelData")]
    partial class Add_PersonnelData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Profile_Shakhsi.Models.Entity.Profile+Articles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfessorProfileId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleFa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProfessorProfileId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("Profile_Shakhsi.Models.Entity.Profile+Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProfessorProfileId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleFa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProfessorProfileId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("Profile_Shakhsi.Models.Entity.Profile+Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProfessorProfileId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleFa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProfessorProfileId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Profile_Shakhsi.Models.Entity.Profile+Education", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProfessorProfileId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleFa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProfessorProfileId");

                    b.ToTable("Educations");
                });

            modelBuilder.Entity("Profile_Shakhsi.Models.Entity.Profile+Membership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProfessorProfileId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleFa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProfessorProfileId");

                    b.ToTable("Membership");
                });

            modelBuilder.Entity("Profile_Shakhsi.Models.Entity.Profile+ProfessionalActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProfessorProfileId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleFa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProfessorProfileId");

                    b.ToTable("ProfessionalActivity");
                });

            modelBuilder.Entity("Profile_Shakhsi.Models.Entity.Profile+ProfessorLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfessorProfileId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleFa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProfessorProfileId");

                    b.ToTable("ProfessorLinks");
                });

            modelBuilder.Entity("Profile_Shakhsi.Models.Entity.Profile+ProfessorProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressFA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaOfStudy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaOfStudyFA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DegreeFA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentFA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Faculty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstNameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstNameFa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullNameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoogleScholarID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastNameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastNameFa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonnelCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionFA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Research")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResearchFA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScopusID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebOfScienceID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProfessorProfiles");
                });

            modelBuilder.Entity("Profile_Shakhsi.Models.Entity.Profile+ResearchArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProfessorProfileId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleFa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProfessorProfileId");

                    b.ToTable("ResearchAreas");
                });

            modelBuilder.Entity("Profile_Shakhsi.Models.Entity.Profile+TeachingInterest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProfessorProfileId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleFa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProfessorProfileId");

                    b.ToTable("TeachingInterests");
                });

            modelBuilder.Entity("Profile_Shakhsi.Models.Entity.Profile+WebLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfessorProfileId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleFa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProfessorProfileId");

                    b.ToTable("WebLinks");
                });

            modelBuilder.Entity("Profile_Shakhsi.Models.Entity.Profile+Articles", b =>
                {
                    b.HasOne("Profile_Shakhsi.Models.Entity.Profile+ProfessorProfile", "ProfessorProfile")
                        .WithMany("Articles")
                        .HasForeignKey("ProfessorProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProfessorProfile");
                });

            modelBuilder.Entity("Profile_Shakhsi.Models.Entity.Profile+Book", b =>
                {
                    b.HasOne("Profile_Shakhsi.Models.Entity.Profile+ProfessorProfile", "ProfessorProfile")
                        .WithMany("Books")
                        .HasForeignKey("ProfessorProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProfessorProfile");
                });

            modelBuilder.Entity("Profile_Shakhsi.Models.Entity.Profile+Course", b =>
                {
                    b.HasOne("Profile_Shakhsi.Models.Entity.Profile+ProfessorProfile", "ProfessorProfile")
                        .WithMany("Courses")
                        .HasForeignKey("ProfessorProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProfessorProfile");
                });

            modelBuilder.Entity("Profile_Shakhsi.Models.Entity.Profile+Education", b =>
                {
                    b.HasOne("Profile_Shakhsi.Models.Entity.Profile+ProfessorProfile", "ProfessorProfile")
                        .WithMany("Educations")
                        .HasForeignKey("ProfessorProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProfessorProfile");
                });

            modelBuilder.Entity("Profile_Shakhsi.Models.Entity.Profile+Membership", b =>
                {
                    b.HasOne("Profile_Shakhsi.Models.Entity.Profile+ProfessorProfile", "ProfessorProfile")
                        .WithMany("Memberships")
                        .HasForeignKey("ProfessorProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProfessorProfile");
                });

            modelBuilder.Entity("Profile_Shakhsi.Models.Entity.Profile+ProfessionalActivity", b =>
                {
                    b.HasOne("Profile_Shakhsi.Models.Entity.Profile+ProfessorProfile", "ProfessorProfile")
                        .WithMany("ProfessionalActivities")
                        .HasForeignKey("ProfessorProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProfessorProfile");
                });

            modelBuilder.Entity("Profile_Shakhsi.Models.Entity.Profile+ProfessorLink", b =>
                {
                    b.HasOne("Profile_Shakhsi.Models.Entity.Profile+ProfessorProfile", "ProfessorProfile")
                        .WithMany("Links")
                        .HasForeignKey("ProfessorProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProfessorProfile");
                });

            modelBuilder.Entity("Profile_Shakhsi.Models.Entity.Profile+ResearchArea", b =>
                {
                    b.HasOne("Profile_Shakhsi.Models.Entity.Profile+ProfessorProfile", "ProfessorProfile")
                        .WithMany("ResearchAreas")
                        .HasForeignKey("ProfessorProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProfessorProfile");
                });

            modelBuilder.Entity("Profile_Shakhsi.Models.Entity.Profile+TeachingInterest", b =>
                {
                    b.HasOne("Profile_Shakhsi.Models.Entity.Profile+ProfessorProfile", "ProfessorProfile")
                        .WithMany("TeachingInterests")
                        .HasForeignKey("ProfessorProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProfessorProfile");
                });

            modelBuilder.Entity("Profile_Shakhsi.Models.Entity.Profile+WebLink", b =>
                {
                    b.HasOne("Profile_Shakhsi.Models.Entity.Profile+ProfessorProfile", "ProfessorProfile")
                        .WithMany("WebLinks")
                        .HasForeignKey("ProfessorProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProfessorProfile");
                });

            modelBuilder.Entity("Profile_Shakhsi.Models.Entity.Profile+ProfessorProfile", b =>
                {
                    b.Navigation("Articles");

                    b.Navigation("Books");

                    b.Navigation("Courses");

                    b.Navigation("Educations");

                    b.Navigation("Links");

                    b.Navigation("Memberships");

                    b.Navigation("ProfessionalActivities");

                    b.Navigation("ResearchAreas");

                    b.Navigation("TeachingInterests");

                    b.Navigation("WebLinks");
                });
#pragma warning restore 612, 618
        }
    }
}
