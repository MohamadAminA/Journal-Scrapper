// <auto-generated />
using System;
using JournalScrapper;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JournalScrapper.Migrations.ProfileShakhsiDb
{
    [DbContext(typeof(ProfileShakhsiDbContext))]
    [Migration("20241015174441_Check")]
    partial class Check
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Profile_Shakhsi.Models.Entity.Articles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfessorProfileId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleFa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProfessorProfileId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("Profile_Shakhsi.Models.Entity.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProfessorProfileId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleFa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProfessorProfileId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("Profile_Shakhsi.Models.Entity.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProfessorProfileId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleFa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProfessorProfileId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Profile_Shakhsi.Models.Entity.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleFa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Profile_Shakhsi.Models.Entity.Education", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CityEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CityFa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryFa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DegreeEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DegreeFa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfessorProfileId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleFa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UniversityEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UniversityFa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProfessorProfileId");

                    b.ToTable("Educations");
                });

            modelBuilder.Entity("Profile_Shakhsi.Models.Entity.Faculty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleFa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Faculties");
                });

            modelBuilder.Entity("Profile_Shakhsi.Models.Entity.Membership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProfessorProfileId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleFa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProfessorProfileId");

                    b.ToTable("Membership");
                });

            modelBuilder.Entity("Profile_Shakhsi.Models.Entity.ProfessionalActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProfessorProfileId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleFa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProfessorProfileId");

                    b.ToTable("ProfessionalActivity");
                });

            modelBuilder.Entity("Profile_Shakhsi.Models.Entity.ProfessorProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AreaOfStudy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaOfStudyFA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BiographyEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BiographyFa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DegreeFA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FacultyId")
                        .HasColumnType("int");

                    b.Property<string>("FinancialCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstNameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstNameFa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullNameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoogleScholarID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentificationNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastNameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastNameFa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonnelCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionFA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Research")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResearchFA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScopusID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UniversityEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WebLinkId")
                        .HasColumnType("int");

                    b.Property<string>("WebOfScienceID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.HasIndex("WebLinkId")
                        .IsUnique()
                        .HasFilter("[WebLinkId] IS NOT NULL");

                    b.ToTable("ProfessorProfiles");
                });

            modelBuilder.Entity("Profile_Shakhsi.Models.Entity.ResearchArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProfessorProfileId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleFa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProfessorProfileId");

                    b.ToTable("ResearchAreas");
                });

            modelBuilder.Entity("Profile_Shakhsi.Models.Entity.TeachingInterest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProfessorProfileId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleFa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProfessorProfileId");

                    b.ToTable("TeachingInterests");
                });

            modelBuilder.Entity("Profile_Shakhsi.Models.Entity.WebLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FaceBook")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISI")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instagram")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkedIn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Orcid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalWebsite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfessorProfileId")
                        .HasColumnType("int");

                    b.Property<string>("ResearchGate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Scholar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Scopus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Twitter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WebLinks");
                });

            modelBuilder.Entity("Profile_Shakhsi.Models.Entity.Articles", b =>
                {
                    b.HasOne("Profile_Shakhsi.Models.Entity.ProfessorProfile", "ProfessorProfile")
                        .WithMany("Articles")
                        .HasForeignKey("ProfessorProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProfessorProfile");
                });

            modelBuilder.Entity("Profile_Shakhsi.Models.Entity.Book", b =>
                {
                    b.HasOne("Profile_Shakhsi.Models.Entity.ProfessorProfile", "ProfessorProfile")
                        .WithMany("Books")
                        .HasForeignKey("ProfessorProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProfessorProfile");
                });

            modelBuilder.Entity("Profile_Shakhsi.Models.Entity.Course", b =>
                {
                    b.HasOne("Profile_Shakhsi.Models.Entity.ProfessorProfile", "ProfessorProfile")
                        .WithMany("Courses")
                        .HasForeignKey("ProfessorProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProfessorProfile");
                });

            modelBuilder.Entity("Profile_Shakhsi.Models.Entity.Education", b =>
                {
                    b.HasOne("Profile_Shakhsi.Models.Entity.ProfessorProfile", "ProfessorProfile")
                        .WithMany("Educations")
                        .HasForeignKey("ProfessorProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProfessorProfile");
                });

            modelBuilder.Entity("Profile_Shakhsi.Models.Entity.Faculty", b =>
                {
                    b.HasOne("Profile_Shakhsi.Models.Entity.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Profile_Shakhsi.Models.Entity.Membership", b =>
                {
                    b.HasOne("Profile_Shakhsi.Models.Entity.ProfessorProfile", "ProfessorProfile")
                        .WithMany("Memberships")
                        .HasForeignKey("ProfessorProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProfessorProfile");
                });

            modelBuilder.Entity("Profile_Shakhsi.Models.Entity.ProfessionalActivity", b =>
                {
                    b.HasOne("Profile_Shakhsi.Models.Entity.ProfessorProfile", "ProfessorProfile")
                        .WithMany("ProfessionalActivities")
                        .HasForeignKey("ProfessorProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProfessorProfile");
                });

            modelBuilder.Entity("Profile_Shakhsi.Models.Entity.ProfessorProfile", b =>
                {
                    b.HasOne("Profile_Shakhsi.Models.Entity.Faculty", "Faculty")
                        .WithMany()
                        .HasForeignKey("FacultyId");

                    b.HasOne("Profile_Shakhsi.Models.Entity.WebLink", "WebLink")
                        .WithOne("ProfessorProfile")
                        .HasForeignKey("Profile_Shakhsi.Models.Entity.ProfessorProfile", "WebLinkId");

                    b.Navigation("Faculty");

                    b.Navigation("WebLink");
                });

            modelBuilder.Entity("Profile_Shakhsi.Models.Entity.ResearchArea", b =>
                {
                    b.HasOne("Profile_Shakhsi.Models.Entity.ProfessorProfile", "ProfessorProfile")
                        .WithMany("ResearchAreas")
                        .HasForeignKey("ProfessorProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProfessorProfile");
                });

            modelBuilder.Entity("Profile_Shakhsi.Models.Entity.TeachingInterest", b =>
                {
                    b.HasOne("Profile_Shakhsi.Models.Entity.ProfessorProfile", "ProfessorProfile")
                        .WithMany("TeachingInterests")
                        .HasForeignKey("ProfessorProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProfessorProfile");
                });

            modelBuilder.Entity("Profile_Shakhsi.Models.Entity.ProfessorProfile", b =>
                {
                    b.Navigation("Articles");

                    b.Navigation("Books");

                    b.Navigation("Courses");

                    b.Navigation("Educations");

                    b.Navigation("Memberships");

                    b.Navigation("ProfessionalActivities");

                    b.Navigation("ResearchAreas");

                    b.Navigation("TeachingInterests");
                });

            modelBuilder.Entity("Profile_Shakhsi.Models.Entity.WebLink", b =>
                {
                    b.Navigation("ProfessorProfile")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
